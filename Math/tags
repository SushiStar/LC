!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/41fa40d/
Solution	CheckIfItIsaStraightLine.cpp	/^class Solution {$/;"	c	file:
Solution	DivideTwoIntegers.cpp	/^class Solution {$/;"	c	file:
Solution	ExcelSheetColumnNumber.cpp	/^class Solution {$/;"	c	file:
Solution	FizzBuzz.cpp	/^class Solution {$/;"	c	file:
Solution	MaximumNumberOfDartsInsideACircularDartBoard.cpp	/^class Solution {$/;"	c	file:
Solution	NumberComplement.cpp	/^class Solution {$/;"	c	file:
Solution	PascalsTriangle.cpp	/^class Solution {$/;"	c	file:
Solution	PowerOfThree.cpp	/^class Solution {$/;"	c	file:
Solution	RomanToInteger.cpp	/^class Solution {$/;"	c	file:
Solution	isPerfectSquare.cpp	/^class Solution {$/;"	c	file:
Translate	RomanToInteger.cpp	/^    int Translate(char fst, char scd) {$/;"	f	class:Solution	typeref:typename:int	file:
anchorX	CheckIfItIsaStraightLine.cpp	/^    int anchorX;$/;"	m	class:Solution	typeref:typename:int	file:
calPoints	MaximumNumberOfDartsInsideACircularDartBoard.cpp	/^    int calPoints(int i, double r, std::vector<std::vector<int>> &points) {$/;"	f	class:Solution	typeref:typename:int	file:
checkStraightLine	CheckIfItIsaStraightLine.cpp	/^    bool checkStraightLine(vector<vector<int>>& coordinates) {$/;"	f	class:Solution	typeref:typename:bool	file:
distance	MaximumNumberOfDartsInsideACircularDartBoard.cpp	/^    std::vector<std::vector<double>> distance;$/;"	m	class:Solution	typeref:typename:std::vector<std::vector<double>>	file:
divide	DivideTwoIntegers.cpp	/^    int divide(int dividend, int divisor) {$/;"	f	class:Solution	typeref:typename:int	file:
findComplement	NumberComplement.cpp	/^    int findComplement(int num) {$/;"	f	class:Solution	typeref:typename:int	file:
fizzBuzz	FizzBuzz.cpp	/^    vector<string> fizzBuzz(int n) {$/;"	f	class:Solution	typeref:typename:vector<string>	file:
fuzz	FizzBuzz.cpp	/^    std::string fuzz(int i) {$/;"	f	class:Solution	typeref:typename:std::string	file:
generate	PascalsTriangle.cpp	/^    vector<vector<int>> generate(int numRows) {$/;"	f	class:Solution	typeref:typename:vector<vector<int>>	file:
intercept	CheckIfItIsaStraightLine.cpp	/^    double intercept;$/;"	m	class:Solution	typeref:typename:double	file:
isPerfectSquare	isPerfectSquare.cpp	/^    bool isPerfectSquare(int num) {$/;"	f	class:Solution	typeref:typename:bool	file:
isPowerOfThree	PowerOfThree.cpp	/^    bool isPowerOfThree(int n) {$/;"	f	class:Solution	typeref:typename:bool	file:
numPoints	MaximumNumberOfDartsInsideACircularDartBoard.cpp	/^    int numPoints(vector<vector<int>> &points, int r) {$/;"	f	class:Solution	typeref:typename:int	file:
romanToInt	RomanToInteger.cpp	/^    int romanToInt(string s) {$/;"	f	class:Solution	typeref:typename:int	file:
sameLine	CheckIfItIsaStraightLine.cpp	/^    bool sameLine(int x, int y) {$/;"	f	class:Solution	typeref:typename:bool	file:
slope	CheckIfItIsaStraightLine.cpp	/^    double slope;$/;"	m	class:Solution	typeref:typename:double	file:
titleToNumber	ExcelSheetColumnNumber.cpp	/^    int titleToNumber(string s) {$/;"	f	class:Solution	typeref:typename:int	file:
verticalLine	CheckIfItIsaStraightLine.cpp	/^    bool verticalLine;$/;"	m	class:Solution	typeref:typename:bool	file:
