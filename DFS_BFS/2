/*
 * Given a set of N people (numbered 1, 2, ..., N), we would like to
 * split everyone into two groups of any size.
 * Each person may dislike some other people, and they should not go
 * into the same group. Fromally, if dislikes[i] = [a, b], it means it
 * is not allowed to put the people numbered a and b into the same
 * group. Return true if and only if it is possible to split everyone
 * into two groups in this way.
 *
 * 1 <= N <= 2000
 * 0 <= dislikes.length <= 10000
 * 1 <= dislikes[i][j] <= N
 * dislikes[i][0] < dislikes[i][1]
 * There does not exsit i!=j for which dislikes[i] == dislikes[j]
 *
 * Date: 05/27/2020
 * Author: Wei Du
 */
#include <vector>
#include <unordered_map>
using namespace std;

class Solution {
public:
    bool possibleBipartition(int N, vector<vector<int>> &dislikes) {
        if (dislikes.empty()) return true;
        std::vector<int> team(N, 0);

        return true;
    }
};
